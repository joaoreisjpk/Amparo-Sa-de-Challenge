import type { GetStaticProps } from 'next';
import Head from 'next/head';
import { useEffect, useMemo, useState } from 'react';
import Header from '../../components/Header';
import { priceItem, pricesData } from '../../interfaces';

export default function Calculadora({ data }: pricesData): JSX.Element {
  const [firstSelectOption, setFirstSelectOption] = useState<string[]>();
  const [firstSelectValue, setFirstSelectValue] = useState('Select');
  const [secondSelectValue, setSecondSelectValue] = useState('Select');
  const [secondSelectOptions, setSecondSelectOptions] = useState<priceItem[]>();
  const [minutsInput, setMinutsInput] = useState('0');
  const [plano, setPlano] = useState('30');
  const [result, setResult] =
    useState<{ descountedPrice: number; defaultPrice: number }>();

  const dataReduce = useMemo(
    () =>
      data.reduce((acc, { origem }) => {
        if (acc.includes(origem)) return acc;

        return [...acc, origem];
      }, [] as string[]),
    [data]
  );

  const handleClick = () => {
    const item = data.find(
      ({ origem, destino }) =>
        origem === firstSelectValue && destino === secondSelectValue
    );

    const price = item?.price || 0;
    const totalMinuts = Number(minutsInput) - Number(plano);

    let descountedPrice: number;
    if (totalMinuts > 0) {
      descountedPrice = price * 1.1 * totalMinuts;
    } else descountedPrice = 0;

    const defaultPrice = Number(minutsInput) * price;

    setResult({ descountedPrice, defaultPrice });
  };

  useEffect(() => {
    setFirstSelectOption(['Select', ...dataReduce]);
  }, [dataReduce]);

  useEffect(() => {
    const array = data.filter(({ origem }) => origem === firstSelectValue);
    setSecondSelectOptions(array);
  }, [data, dataReduce, firstSelectValue]);

  return (
    <div>
      <Head>
        <title> Calculadora - Amparo Telef√¥nica</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <h1>Calculadora</h1>
      <select
        name=''
        id=''
        onChange={({ target }) => setFirstSelectValue(target.value)}
      >
        {firstSelectOption?.map((item) => (
          <option key={item} value={item}>
            {item}
          </option>
        ))}
      </select>
      <select
        name=''
        id=''
        disabled={firstSelectValue === 'Select'}
        onChange={({ target }) => setSecondSelectValue(target.value)}
      >
        <option value='Select'>Select</option>
        {secondSelectOptions?.map(({ id, destino }) => (
          <option key={id} value={destino}>
            {destino}
          </option>
        ))}
      </select>
      <select name='' id='' onChange={({ target }) => setPlano(target.value)}>
        <option value={'30'}>FaleMais 30</option>
        <option value={'60'}>FaleMais 60</option>
        <option value={'120'}>FaleMais 120</option>
      </select>
      <input
        type='number'
        value={minutsInput}
        onChange={({ target }) => setMinutsInput(target.value)}
      />
      <button type='button' onClick={handleClick}>
        Calcular
      </button>
      <div>
        {!!result &&
          `com falemais: ${result.descountedPrice} sem falemais:
        ${result.defaultPrice}`}
      </div>
    </div>
  );
}

export const getStaticProps: GetStaticProps = async () => {
  const response = await fetch('http://localhost:3000/api/prices');
  const data = await response.json();

  return {
    props: {
      data,
    },
    revalidate: 15 * 60 * 60,
  };
};
