import type { GetStaticProps } from 'next';
import Head from 'next/head';
import { useEffect, useMemo, useState } from 'react';
import Header from '../../components/Header';
import { priceItem, pricesData } from '../../interfaces';

export default function Calculadora({ data }: pricesData): JSX.Element {
  const [firstSelectOption, setFirstSelectOption] = useState<string[]>();
  const [firstSelectValue, setFirstSelectValue] = useState('Select');
  const [secondSelectOptions, setSecondSelectOptions] = useState<priceItem[]>();

  const dataReduce = useMemo(
    () =>
      data.reduce((acc, { origem }) => {
        if (acc.includes(origem)) return acc;

        return [...acc, origem];
      }, [] as string[]),
    [data]
  );

  useEffect(() => {
    setFirstSelectOption(['Select', ...dataReduce]);
  }, [dataReduce]);

  useEffect(() => {
    const array = data.filter(({ origem }) => origem === firstSelectValue);
    setSecondSelectOptions(array);
  }, [data, dataReduce, firstSelectValue]);

  return (
    <div>
      <Head>
        <title> Calculadora - Amparo Telef√¥nica</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <h1>Calculadora</h1>
      <select
        name=''
        id=''
        onChange={({ target }) => setFirstSelectValue(target.value)}
      >
        {firstSelectOption?.map((item) => (
          <option key={item} value={item}>
            {item}
          </option>
        ))}
      </select>
      <select name='' id='' disabled={firstSelectValue === 'Select'}>
        {secondSelectOptions?.map(({ id, destino }) => (
          <option key={id} value={destino}>
            {destino}
          </option>
        ))}
      </select>
    </div>
  );
}

export const getStaticProps: GetStaticProps = async () => {
  const response = await fetch('http://localhost:3000/api/prices');
  const data = await response.json();

  return {
    props: {
      data,
    },
    revalidate: 15 * 60 * 60,
  };
};
